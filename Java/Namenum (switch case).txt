/*
ID:   colekor1
LANG: JAVA
TASK: namenum
*/
/*
NAME			:	Cole Koryto
GROUP			:	AP CS
LAST MODIFIED		:	1/9/20
PROBLEM ID		:	namenum
DESCRIPTION		:	In this problem I had to find what names
		    	:	I could make with a set of numbers where
		    	:	each number had three letters it could be.
			:	Then I had to check if these possible names were
			:	in a given dictionary.
HELPED ME		:	USACO
HELPED			:	None
*/
import java.io.*;
import java.util.*;

class namenum
{
    public static void main(String[] args) throws IOException
    {
        //inputs the acceptable names
        Scanner in = new Scanner(new FileReader("dict.txt"));
        String[] okNames = new String[5000];
        int counter = 0;
        while (in.hasNext())
        {
            okNames[counter] = in.next();
            counter++;
        }
        in.close();

        //inputs brand number
        String brand;
        Scanner input = new Scanner(new FileReader("namenum.in"));
        brand = input.next();

        //finds possible letters
        Vector <String> possibleLetters= new Vector<String>();
        for(int i = 0; i<brand.length(); i++)
        {
            switch(brand.charAt(i))
            {
                case '2': possibleLetters.addElement("ABC"); break;
                case '3': possibleLetters.addElement("DEF"); break;
                case '4': possibleLetters.addElement("GHI"); break;
                case '5': possibleLetters.addElement("JKL"); break;
                case '6': possibleLetters.addElement("MNO"); break;
                case '7': possibleLetters.addElement("PRS"); break;
                case '8': possibleLetters.addElement("TUV"); break;
                case '9': possibleLetters.addElement("WXY"); break;
            }
        }

        //finds possible names by testing each in dict.txt
        Vector <String> possibleNames= new Vector<String>();
        for(int i = 0; i<counter; i++)
        {
            boolean success = false;
            if(okNames[i].length()==possibleLetters.size())
            {
                //checks if letters are possible
                for (int j = 0; j < possibleLetters.size(); j++)
                {
                    boolean pass = false;
                    for (int n = 0; n < 3; n++)
                    {
                        if (okNames[i].charAt(j) == possibleLetters.elementAt(j).charAt(n))
                        {
                            pass = true;
                            break;
                        }
                    }
                    if (!pass)
                        break;
                    else if (j == possibleLetters.size() - 1)
                        success = true;
                }

                //if the name is possible it will add it to the list
                if (success)
                    possibleNames.addElement(okNames[i]);
            }
        }

        //outputs names that work
        PrintWriter output = new PrintWriter(new BufferedWriter(new FileWriter("namenum.out")));
        if(possibleNames.size() < 1)
            output.println("NONE");
        else
        for(int i =0; i<possibleNames.size(); i++)
            output.println(possibleNames.elementAt(i));
        output.close();
    }
}
