/*
ID:   colekor1
LANG: JAVA
TASK: pprime
*/
/*
NAME			:	Cole Koryto
GROUP			:	AP CS
LAST MODIFIED		:	7/19/20
PROBLEM ID		:	Prime Palindromes
DESCRIPTION		:	In this problem I had to find all the numbers
              		:   	that were palindromes and prime in a given set of
                	:   	numbers. I did this by generating 
			:	palindromes up to the limit and then
                	:   	checking if they were prime.
HELPED ME		:	USACO
HELPED			:	None
*/
import java.io.*;
import java.util.*;

class pprime
{
    public static void main(String[] args) throws IOException
    {
        //inputs range and declares variables
        Scanner input = new Scanner(new FileReader("pprime.in"));
        boolean valid;
        boolean pastBounds;
        int rangeStart = input.nextInt();
        int rangeEnd = input.nextInt();
        input.close();
        ArrayList<Integer> outputArrayList = new ArrayList<Integer>();
        int[] palinOdd = new int[9];
        int[] palinEven = new int[9];
        int value;
        String numToCheck;

        //finds and any values in the range that are odd length, prime, and a palindrome
        pastBounds = false;
        int digitCounter = 0;
        for(int d5 = 0; d5<10;d5++)
        {
            for(int d4 = 0; d4<10;d4++)
            {
                for(int d3 = 0; d3<10;d3++)
                {
                    for(int d2 = 0; d2<10;d2++)
                    {
                        for(int d1 = 0; d1<10;d1++)
                        {
                            //makes digits for palindrome
                            numToCheck = "";
                            palinOdd[0] = d5;
                            palinOdd[1] = d4;
                            palinOdd[2] = d3;
                            palinOdd[3] = d2;
                            palinOdd[4] = d1;
                            palinOdd[5] = d2;
                            palinOdd[6] = d3;
                            palinOdd[7] = d4;
                            palinOdd[8] = d5;
                            for(int i =0; i<9; i++)
                                if(palinOdd[i]!= -1)
                                    numToCheck += "" + palinOdd[i];
                            value = Integer.parseInt(numToCheck);
                            
                            //takes off extra zeros on right side of number
                            value = value/(int)Math.pow(10,4-digitCounter);
                            if(value == 9 || value == 999 ||value == 99999 ||value == 9999999 ||value == 999999999)
                                digitCounter++;
                            
                            //stops if over limit
                            if(value > rangeEnd)
                            {
                                pastBounds = true;
                                break;
                            }

                            //checks if prime
                            if(value % 2 != 0 && rangeStart <= value)
                            {
                                valid = true;
                                for (int i = 3; i <= Math.sqrt(value); i = i + 2)
                                {
                                    if (value % i == 0)
                                    {
                                        valid = false;
                                        break;
                                    }
                                }
                                if (valid && value > 4)
                                    outputArrayList.add(value);
                            }
                        }
                        if(pastBounds)
                            break;
                    }
                    if(pastBounds)
                        break;
                }
                if(pastBounds)
                    break;
            }
            if(pastBounds)
                break;
        }

        //finds and any values in the range that are even length, prime, and a palindrome
        pastBounds = false;
        for(int d4 = -1; d4<10;d4++)
        {
            for(int d3 = -1; d3<10;d3++)
            {
                for(int d2 = -1; d2<10;d2++)
                {
                    for(int d1 = 0; d1<10;d1++)
                    {
                        //makes digits for palindrome
                        numToCheck = "";
                        palinEven[0] = d4;
                        palinEven[1] = d3;
                        palinEven[2] = d2;
                        palinEven[3] = d1;
                        palinEven[4] = d1;
                        palinEven[5] = d2;
                        palinEven[6] = d3;
                        palinEven[7] = d4;
                        for(int i =0; i<8; i++)
                            if(palinEven[i]!= -1)
                                numToCheck += "" + palinEven[i];
                        value = Integer.parseInt(numToCheck);
                        if((int) (Math.log10(value)+1) %2 != 0 || value%10 == 0 && value != 0)
                            break;
                        
                        //stops is over limit
                        if(value > rangeEnd)
                        {
                            pastBounds = true;
                            break;
                        }

                        //checks if prime
                        if(value % 2 != 0 && rangeStart <= value)
                        {
                            valid = true;
                            for (int i = 3; i <= Math.sqrt(value); i = i + 2)
                            {
                                if (value % i == 0)
                                {
                                    valid = false;
                                    break;
                                }
                            }
                            if (valid && value > 4)
                                outputArrayList.add(value);
                        }
                    }
                    if(pastBounds)
                        break;
                }
                if(pastBounds)
                    break;
            }
            if(pastBounds)
                break;
        }

        //outputs any number that was found to be prime and a palindrome
        Collections.sort(outputArrayList);
        PrintWriter output = new PrintWriter(new BufferedWriter(new FileWriter("pprime.out")));
        for(int i = 0; i<outputArrayList.size(); i++)
            output.println(outputArrayList.get(i));
        output.close();
    }
}


